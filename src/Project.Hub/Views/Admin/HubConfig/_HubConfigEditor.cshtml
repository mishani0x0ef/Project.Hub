@using Project.Hub.Config.Entities;

@model RawConfig

<style type="text/css" media="screen">
    .editor-container {
        position: relative;
        height: 500px;
        z-index: 1050;
    }

    .editor-container.full-screen {
        position: fixed;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
    }

        .editor-container .btn {
            position: absolute;
            top: 20px;
            right: 20px;
            z-index: 1100;
        }

        .editor-container .btn-expand {
            display: block;
        }

        .editor-container .btn-collapse {
            display: none;
        }

        .editor-container.full-screen .btn-expand {
            display: none;
        }

        .editor-container.full-screen .btn-collapse {
            display: block;
        }

        .editor-container .editor-content {
            height: 100%;
            width: 100%;
        }
</style>

@Html.Partial("HubConfig/_ConfigEditNotes")

<div class="editor-container panel">
    <button class="btn btn-lg btn-link btn-expand">
        <span class="glyphicon glyphicon-fullscreen"></span>
    </button>
    <button class="btn btn-lg btn-link btn-collapse">
        <span class="glyphicon glyphicon-resize-small"></span>
    </button>

    <div id="hub-config-editor" class="editor-content">
        @Model.Text
    </div>
</div>

<button class="btn btn-primary">Save Config</button>

<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.3.3/ace.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.3.3/mode-json.js"></script>

<script>
    var editor = ace.edit("hub-config-editor");
    editor.setTheme("ace/theme/monokai");
    editor.session.setMode("ace/mode/json");

    editor.setOptions({
        showPrintMargin: false,
    });

    (function () {
        const expandButtons = document.querySelectorAll(".editor-container .btn-expand");
        expandButtons.forEach(button => {
            button.addEventListener("click", (e) => {
                e.currentTarget.parentElement.classList.add("full-screen");
            });
        });

        const collapseButtons = document.querySelectorAll(".editor-container .btn-collapse");
        collapseButtons.forEach(button => {
            button.addEventListener("click", (e) => {
                e.currentTarget.parentElement.classList.remove("full-screen");
            });
        });
    })();
</script>